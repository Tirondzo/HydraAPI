#
# Find Asio
#
# Try to find Asio.
# This module defines the following variables:
# - ASIO_INCLUDE_DIRS
# - ASIO_FOUND
#
# The following variables can be set as arguments for the module.
# - ASIO_ROOT_DIR : Root library directory of Asio
#
# The 'Asio' target generated by this module uses the "standalone" version of
# asio in that it doesn't depend on any Boost libraries.


# Additional modules
include(FindPackageHandleStandardArgs)

if (WIN32)
    # Find include files
    find_path(
            ASIO_INCLUDE_DIR
            NAMES asio.hpp
            PATHS
            $ENV{PROGRAMFILES}/include
            ${ASIO_ROOT_DIR}/include
            ${CMAKE_SOURCE_DIR}/LIBRARY/include
            DOC "The directory where asio.hpp resides")

    # Find library files
    # There is no lib files: Asio is headers only

else()
    # Find include files
    find_path(
            ASIO_INCLUDE_DIR
            NAMES asio.hpp
            PATHS
            /usr/include
            /usr/local/include
            /sw/include
            /opt/local/include
            DOC "The directory where asio.hpp resides")

    # Find library files
    # There is no lib files: Asio is headers only

endif()

# Handle REQUIRED argument, define *_FOUND variable
find_package_handle_standard_args(Asio DEFAULT_MSG ASIO_INCLUDE_DIR)

# Define ASIO_INCLUDE_DIRS
if (ASIO_FOUND)
    set(ASIO_INCLUDE_DIRS ${ASIO_INCLUDE_DIR})
endif()

# Hide some variables
mark_as_advanced(ASIO_INCLUDE_DIR)
